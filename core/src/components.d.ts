/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface IbkButton {
    'disabled': boolean;
    'type': 'submit' | 'reset' | 'button';
  }
  interface IbkFormField {
    'state': 'informative' | 'success' | 'warning' | 'error';
  }
  interface IbkIcon {
    'name': string;
  }
  interface IbkSelect {
    'disabled': boolean;
    'placeholder': string;
    'value': any;
  }
}

declare global {


  interface HTMLIbkButtonElement extends Components.IbkButton, HTMLStencilElement {}
  var HTMLIbkButtonElement: {
    prototype: HTMLIbkButtonElement;
    new (): HTMLIbkButtonElement;
  };

  interface HTMLIbkFormFieldElement extends Components.IbkFormField, HTMLStencilElement {}
  var HTMLIbkFormFieldElement: {
    prototype: HTMLIbkFormFieldElement;
    new (): HTMLIbkFormFieldElement;
  };

  interface HTMLIbkIconElement extends Components.IbkIcon, HTMLStencilElement {}
  var HTMLIbkIconElement: {
    prototype: HTMLIbkIconElement;
    new (): HTMLIbkIconElement;
  };

  interface HTMLIbkSelectElement extends Components.IbkSelect, HTMLStencilElement {}
  var HTMLIbkSelectElement: {
    prototype: HTMLIbkSelectElement;
    new (): HTMLIbkSelectElement;
  };
  interface HTMLElementTagNameMap {
    'ibk-button': HTMLIbkButtonElement;
    'ibk-form-field': HTMLIbkFormFieldElement;
    'ibk-icon': HTMLIbkIconElement;
    'ibk-select': HTMLIbkSelectElement;
  }
}

declare namespace LocalJSX {
  interface IbkButton {
    'disabled'?: boolean;
    'type'?: 'submit' | 'reset' | 'button';
  }
  interface IbkFormField {
    'state'?: 'informative' | 'success' | 'warning' | 'error';
  }
  interface IbkIcon {
    'name'?: string;
  }
  interface IbkSelect {
    'disabled'?: boolean;
    'onOpenedChange'?: (event: CustomEvent<boolean>) => void;
    'onSelectionChange'?: (event: CustomEvent<any>) => void;
    'placeholder'?: string;
    'value'?: any;
  }

  interface IntrinsicElements {
    'ibk-button': IbkButton;
    'ibk-form-field': IbkFormField;
    'ibk-icon': IbkIcon;
    'ibk-select': IbkSelect;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'ibk-button': LocalJSX.IbkButton & JSXBase.HTMLAttributes<HTMLIbkButtonElement>;
      'ibk-form-field': LocalJSX.IbkFormField & JSXBase.HTMLAttributes<HTMLIbkFormFieldElement>;
      'ibk-icon': LocalJSX.IbkIcon & JSXBase.HTMLAttributes<HTMLIbkIconElement>;
      'ibk-select': LocalJSX.IbkSelect & JSXBase.HTMLAttributes<HTMLIbkSelectElement>;
    }
  }
}


